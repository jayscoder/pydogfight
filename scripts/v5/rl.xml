<Root name="V4RL">

    <Parallel name="V5Reward">
        <Sequence>
            <IsChanged value="{{agent.missile_miss_count}}"/>
            <!--导弹打空了-->
            <Reward reward="-1" scope="pursue"/>
        </Sequence>

        <Sequence>
            <IsChanged value="{{agent.missile_hit_enemy_count}}"/>
            <!--导弹打中了对方-->
            <Reward reward="1" scope="pursue"/>
        </Sequence>

        <Sequence>
            <IsChanged value="{{agent.collided_aircraft_count}}"/>
            <!--与飞机相撞，给出惩罚-->
            <Reward reward="-1" scope="pursue"/>
        </Sequence>

<!--        <Sequence>-->
<!--            <IsChanged value="{{agent.missile_evade_success_count}}"/>-->
<!--            &lt;!&ndash;成功规避导弹，给出奖励&ndash;&gt;-->
<!--            <Reward reward="1" scope="pursue"/>-->
<!--        </Sequence>-->
<!--        -->
<!--        <Sequence>-->
<!--            <IsChanged value="{{agent.missile_hit_self_count}}"/>-->
<!--            &lt;!&ndash;被导弹打中，给出惩罚&ndash;&gt;-->
<!--            <Reward reward="-1" scope="pursue"/>-->
<!--        </Sequence>-->

    </Parallel>

    <ReactiveSequence>
        <Inverter>
            <IsMissileDepleted/>
        </Inverter>
        <IsEnemyDetected/>
        <FireMissileAtNearestEnemy/>
    </ReactiveSequence>

    <Selector>
        <ReactiveSequence>
            <Inverter>
                <IsInSafeArea/>
            </Inverter>
            <GoToSafeArea/>
        </ReactiveSequence>

        <!--        <ReactiveSequence>-->
        <!--            <IsMissileThreatDetected/>-->
        <!--            <EvadeMissile/>-->
        <!--            <RLGoToLocation-->
        <!--                    algo="{{rl_algo}}"-->
        <!--                    reward_scope="evade"-->
        <!--                    path="{{models_dir}}/{{agent_name}}/RLGoToLocationEvade"-->
        <!--                    tensorboard_log="{{output_dir}}/{{runtime}}/RLGoToLocationEvade"-->
        <!--                    log_interval="30"-->
        <!--                    save_interval="30"-->
        <!--            />-->
        <!--        </ReactiveSequence>-->

        <ReactiveSequence>
            <IsInSafeArea/>
            <IsEnemyDetected/>
            <!--            <AutoPursueNearestEnemy/>-->
            <RLGoToLocation
                    algo="{{rl_algo}}"
                    reward_scope="pursue"
                    path="{{models_dir}}/{{agent_name}}/RLGoToLocationPursue"
                    tensorboard_log="{{output_dir}}/{{runtime}}/RLGoToLocationPursue"
                    log_interval="30"
                    save_interval="30"
            />

            <!--PursueNearestEnemy会更智能一些，会往优势更高的敌方飞-->
            <!--                <PursueNearestEnemy attack_ratio="0.5" evade_ratio="0.5"/>-->
        </ReactiveSequence>

        <ReactiveSequence>
            <IsInSafeArea/>
            <Inverter>
                <IsEnemyDetected/>
            </Inverter>
            <Inverter>
                <IsMissileThreatDetected/>
            </Inverter>
            <CheatGoToNearestEnemy/>
            <!--            <include path="subtree/random_grid_explore.xml"/>-->
        </ReactiveSequence>
    </Selector>
</Root>
